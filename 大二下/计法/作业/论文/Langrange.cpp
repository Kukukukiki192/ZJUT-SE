#include<iostream>
#include<cmath>
using namespace std;
int main(){
	int i,j,k,t,n=19;//n+1个点 去掉内插或外插时刻的点,最多计算到n-1阶 
	i=n/2;//内插数位置
	double
	x[n+1]={20715.168881,22262.163674,23623.391045,24760.008511,25638.989236,
			26234.338681,26528.042822,26510.713906,26181.912099,25550.134199,
			24632.473549,23453.967430,22046.659656,20448.415987,18701.538385,
			16851.230624,14943.972372,13025.861406,11140.984188,9329.873581},
	y[n+1]={-2164.830431,-1277.419947,-564.440896,-8.256861,415.574865,
			737.129504,990.72691,1213.386898,1443.190158,1717.609714,
			2071.877768,2537.450266,3140.626774,3901.376515,4832.413079,
			5938.550789,7216.365108,8654.168549,10232.3023,11923.732699},
	x0=x[i],y0=y[i],y1,e; //y1存放y值计算结果,e(=y1-y0)存放差值 
//	x0=x[n],y0=y[n],y1,e;
		
	cout<<"拉格朗日插值计算结果"<<endl;
	cout<<"内插："<<endl;
	double sum,mul; 
	for(k=1;k<=n-1;k++){
		i=n/2; //刷新i 
		double a[k+1],b[k+1];
		int p=(k+1)/2; 
		for(t=0;t<p;t++){
			a[t]=x[--i];
			b[t]=y[i];
		}i=n/2;//刷新i 
		for(t=p;t<k+1;t++){
			a[t]=x[++i];
			b[t]=y[i];
		}
				
		sum=0;
		for(j=0;j<=k;j++){
			mul=1;
			for(i=0;i<=k;i++){
				if(i!=j) mul*=(x0-a[i])/(a[j]-a[i]);
			}sum+=b[j]*mul;
		}y1=sum; e=fabs(y1)-fabs(y0);
		cout<<"阶数="<<k<<'\t'<<"y="<<y1<<'\t'<<"差值="<<e<<endl; 
	}	
	cout<<"外插："<<endl;
	for(k=1;k<=n-1;k++){
		i=n; //刷新i 
		double a[k+1],b[k+1]; 
		for(t=0;t<k+1;t++){
			a[t]=x[--i];
			b[t]=y[i];
		}
				
		sum=0;
		for(j=0;j<=k;j++){
			mul=1;
			for(i=0;i<=k;i++){
				if(i!=j) mul*=(x0-a[i])/(a[j]-a[i]);
			}sum+=b[j]*mul;
		}y1=sum; e=fabs(y1)-fabs(y0);
		cout<<"阶数="<<k<<'\t'<<"y="<<y1<<'\t'<<"差值="<<e<<endl; 
	}	
		
	return 0;	
}
